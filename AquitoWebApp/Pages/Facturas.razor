@page "/reportes/facturas/{id}/{ft}"
@attribute [Authorize]
@inject HttpClient _http
@inject ISnackbar _snackbar
@inject NavigationManager _navigationManager
@using System.Linq

<h1 class="text-center">Factura</h1>
<MudNavLink Href="/" Icon="@Icons.Filled.ArrowBack" Style="width: 150px">Regresar</MudNavLink>

@{
    if (Id == "6")
    {
       <MudText Typo="Typo.h6" >Factura 606</MudText>
        
    }else if(Id == "7"){
       <MudText Typo="Typo.h6" >Factura 607</MudText>
    }
}



@code {
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string Ft { get; set; }

    private readonly Margin _margin = Margin.Dense;
    private readonly Variant _variant = Variant.Outlined;
    private readonly Adornment _adornment = Adornment.End;

    Factura1 factura;
    List<DetalleFactura606> detallefacturas606;
    List<DetalleFactura607> detallefacturas607;

    public string Comprobante { get; set; }
    public DateTime? ComprobanteDate { get; set; }
    public decimal? Monto { get; set; }
    public decimal? Itbis { get; set; }

    //Factura606
    public int? Factura606id { get; set; }
    public DateTime? FechaPago { get; set; }
    public string FormaPago { get; set; }
    public string TypeVenta { get; set; }

    //Factura607
    public string TypeIncome { get; set; }
    public int? Factura607id { get; set; }

    protected override async Task OnInitializedAsync() {
        factura = await _http.GetFromJsonAsync<Factura1>($"api/factura60{Id}/{Ft}");
        if (Id == "6")
        {
            detallefacturas606 = await _http.GetFromJsonAsync<List<DetalleFactura606>>($"api/detallefactura606/main/{Ft}");
        } else if (Id == "7")
        {
            detallefacturas607 = await _http.GetFromJsonAsync<List<DetalleFactura607>>($"api/detallefactura607/main/{Ft}");
        }
    }

    //Metodos

    private async Task RegistrarDetalleFactura() {
        if (!String.IsNullOrEmpty(Comprobante)) {

            if (Id == "6")
            {
                DetalleFactura606 detalleft606 = new() {
                Comprobante = Comprobante,
                ComprobanteDate = ComprobanteDate,
                FechaPago = FechaPago,
                FormaPago = FormaPago,
                TypeVenta = TypeVenta,
                Monto = Monto,
                Itbis = Itbis,
                Factura606id = int.Parse(Ft),
                Status = 1
            };

                var ft606 = await _http.PostAsJsonAsync("api/detallefactura606", detalleft606);

                if (ft606.IsSuccessStatusCode) {
                    Comprobante = "";
                    Monto = 0;
                    Itbis = 0;
                    FormaPago = "";
                    TypeVenta = "";
                    _snackbar.Add($"Se ha agregado el registro correctamente.", Severity.Success);
                    detallefacturas606 = await _http.GetFromJsonAsync<List<DetalleFactura606>>($"api/detallefactura606/main/{Ft}");

                } else {
                    _snackbar.Add($"Ha ocurrido un error, por favor revisar los datos.", Severity.Error);
                }
            }
            else if (Id == "7"){
                DetalleFactura607 detalleft607 = new() {
                Comprobante = Comprobante,
                ComprobanteDate = ComprobanteDate,
                Monto = Monto,
                Itbis = Itbis,
                TypeIncome = TypeIncome,
                Factura607id = int.Parse(Ft),
                Status = 1
            };

                var ft607 = await _http.PostAsJsonAsync("api/detallefactura607", detalleft607);

                if (ft607.IsSuccessStatusCode) {
                    Comprobante = "";
                    Monto = 0;
                    Itbis = 0;
                    TypeIncome = "";
                    _snackbar.Add($"Se ha agregado el registro correctamente.", Severity.Success);
                detallefacturas607 = await _http.GetFromJsonAsync<List<DetalleFactura607>>($"api/detallefactura607/main/{Ft}");

            } else {
                _snackbar.Add($"Ha ocurrido un error, por favor revisar los datos.", Severity.Error);
                }

            }

            
        }


    }



    









    //CLASES

    public class Factura1
    {
        public int Id { get; set; }
        public string Age { get; set; }
        public int? Mes { get; set; }
        public string Identification { get; set; }
        public int? Status { get; set; }
        public DateTime? EmisionDate { get; set; }
    }
    public class DetalleFactura606
    {
        public string Comprobante { get; set; }
        public DateTime? ComprobanteDate { get; set; }
        public DateTime? FechaPago { get; set; }
        public string FormaPago { get; set; }
        public string TypeVenta { get; set; }
        public decimal? Monto { get; set; }
        public decimal? Itbis { get; set; }
        public int? Status { get; set; }
        public int? Factura606id { get; set; }
    }
    public class DetalleFactura607
    {
        public string Comprobante { get; set; }
        public DateTime? ComprobanteDate { get; set; }
        public string TypeIncome { get; set; }
        public decimal? Monto { get; set; }
        public decimal? Itbis { get; set; }
        public int? Status { get; set; }
        public int? Factura607id { get; set; }
    }
}
